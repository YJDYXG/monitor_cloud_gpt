EXEC_FILE = monitor_cloud_gpt
POLICY_EXEC_FILE = ./build/$(EXEC_FILE)
VERSION_FILE = src/mcloud/version.go
VERSION_MAJOR = `cat ../process_public/process_config/version`
GO_VERSION = `go version | cut -c 12-`
SRC_VERSION = `git log | head -n 1 | cut -c 8-`
PUBLIC_VERSION = `cd ../process_public; git log | head -n 1 | cut -c 8-;`

.PHONY: all clean

all: clean version $(POLICY_EXEC_FILE)

version:
	@truncate --size 0 $(VERSION_FILE)
	@echo "package main" >> $(VERSION_FILE)
	@echo "" >> $(VERSION_FILE)
	@echo "// VERSION : this version is generated by Makefile" >> $(VERSION_FILE)
	@echo "const (" >> $(VERSION_FILE)
	@echo "	VERSION = \"$(VERSION_MAJOR)  @$(GO_VERSION)  SRC#$(SRC_VERSION)  CMN#$(PUBLIC_VERSION)\"" >> $(VERSION_FILE)
	@echo ")" >> $(VERSION_FILE)

$(POLICY_EXEC_FILE):
	@echo "all ..."
	find ./src -name "*.go"  |xargs gofmt -w
	go build -v $(EXEC_FILE)
	@mkdir -p ./build
	@mv $(EXEC_FILE) ./build/

clean:
	@echo "clean ..."
	rm -f $(POLICY_EXEC_FILE)

rebuild : clean version all

install:
	@echo "install ..."
	install $(POLICY_EXEC_FILE) /usr/local/bin/$(EXEC_FILE)
check:
	go tool vet src/

test:
	go test -tags "libdm_no_deferred_remove" ./...


